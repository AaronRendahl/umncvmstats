[{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"about-data-sets","dir":"Articles","previous_headings":"","what":"About data sets","title":"About Data","text":"good data file … rectangular observations rows variables columns Can extra information (metadata) rows data; can R skip information formatting (ie, color) position (ie, sorting shouldn’t lose information) minimal computation duplication well-labeled variables… Unfortunately computers humans different ideas good label . Good computer labels: Alphanumeric underscore , starting letter. Units often get way. (eg, BloodPressure blood_pressure) Good human labels: spaces, parentheses allowed, units specified. “Blood Pressure (mmHg)” Consider using two rows labels, human labels (skipped reading data ) computer labels.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"reading-in-data","dir":"Articles","previous_headings":"","what":"Reading in data","title":"About Data","text":"’ll often read data either csv Excel sheets. functions read_csv read_excel used . take filename first parameter, additional parameters na specify values considered missing, skip skip certain number rows top. Excel sheet, ’s also optional sheet parameter specify sheet read; default first sheet read. ’s also recommended use function specify location file within project; allows move script Quarto file subfolders within project without changing code. example, following code reads csv file test.csv main folder, considers single period . code NA missing values, skips first two lines. also saves result variable testdata. ’s similar reading Excel file, specifically chooses read sheet named mydata. specified, first sheet chosen. examples document, ’ll use mtcars2 data set, included umncvmstats package.","code":"testdata <- read_csv(here(\"test.csv\"), na = c(\".\", \"NA\"), skip = 2) testdata <- read_excel(here(\"test.csv\"), sheet = \"mydata\", na = c(\".\", \"NA\"), skip = 2)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"checking-that-it-was-read-properly","dir":"Articles","previous_headings":"Reading in data","what":"Checking that it was read properly","title":"About Data","text":"first reading data file, use skim function sure read properly. shows number rows columns read, type variable (character/factor/numeric, etc.), shows basic summary information variable. function umncvmstats uses skimr package behind scenes; control possible using package directly. Summary mtcars2: 32 rows, 12 columns Variable type: character Variable type: factor Variable type: numeric R, categorical variable called factor; text variables usually factors unless simply used identification, like model variable, . common error variable numeric read text, due unspecified missing value code. sure check variables expected type, values summarized make sense.","code":"mtcars2 |> skim()"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"creating-factors","dir":"Articles","previous_headings":"Reading in data","what":"Creating factors","title":"About Data","text":"mtcars2 data set based mtcars data set, included basic R installation. original mtcars data set, though, variables numeric; categorical variables coded 0/1. Compare skim summary mtcars data set mtcars2: Summary mtcars: 32 rows, 11 columns Variable type: numeric convert variables categorical variables, use functions mutate, as_factor, optionally fct_recode; ’ll see later, now, let’s just see couple examples use convert variables. mutate function creates new variables (possibly overwriting old ones). Within mutate use newname = [operation] perform operation assign result variable newname. Multiple variables can created within one call mutate using commas. as_factor converts variable categorical variable. may also see original version, factor; version tidyverse preferred improved consistency. fct_recode changes coding values. example, following code: save result new variable my_mtcars creates new variable cyl (overwrite previous cyl) running as_factor cyl variable creates new variable vs (, overwrites previous vs) first running as_factor vs recoding 0 becomes V-shaped 1 becomes Straight. Quotation marks recommended, though certain cases absolutely necessary. skim new result. Summary my_mtcars: 32 rows, 11 columns Variable type: factor Variable type: numeric","code":"mtcars |> skim() my_mtcars <- mtcars |>   mutate(cyl = as_factor(cyl),          vs = as_factor(vs) |> fct_recode(\"V-shaped\"=\"0\", \"Straight\"=\"1\")) skim(my_mtcars)"},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"descriptive-statistics-for-all-variables","dir":"Articles","previous_headings":"Summarizing data","what":"Descriptive statistics for all variables","title":"About Data","text":"get basic descriptive statistics, use descriptive_statistics function, shows mean/SD/median/range continuous variables count/percent categorical variables (continuous variables just values). ’m using select (seen later) remove model variable computing statistics. version tbl_summary gtsummary package; control possible using package directly. One can also compute statistics subsets data, splitting another variable first, using parameter. code gets descriptive statistics group (automatic manual) separately. [Output shown] output formatted, making great understanding display, hard work . work , ’d need compute values .","code":"mtcars2 |> select(-model) |> descriptive_statistics() mtcars2 |> select(-model) |> descriptive_statistics(by=am)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"summarizing-categorical-variables","dir":"Articles","previous_headings":"Summarizing data","what":"Summarizing categorical variables","title":"About Data","text":"Use count count categorical variables; count combinations multiple variables separating comma. can use mutate make new variable percent; see mutate later. adds columns overall percent desired combination variables. Note within computation, percents sum 100%. , however, want compute percent one variable within categories another variable, can use .parameter, computation separately value specified variable. Now percents within value (automatic manual) sum 100%. Another option use xtabs get “cross-tabulation” multiple variables. uses “formula” syntax, ’ll see inference. also stores result matrix, easier view harder work . row columns sums can added using addmargins.","code":"mtcars2 |> count(vs) #> # A tibble: 2 × 2 #>   vs           n #>   <fct>    <int> #> 1 V-shaped    18 #> 2 straight    14 mtcars2 |> count(vs, am) #> # A tibble: 4 × 3 #>   vs       am            n #>   <fct>    <fct>     <int> #> 1 V-shaped automatic    12 #> 2 V-shaped manual        6 #> 3 straight automatic     7 #> 4 straight manual        7 mtcars2 |> count(vs) |> mutate(percent = n / sum(n)) #> # A tibble: 2 × 3 #>   vs           n percent #>   <fct>    <int>   <dbl> #> 1 V-shaped    18   0.562 #> 2 straight    14   0.438 mtcars2 |> count(vs, am) |> mutate(percent = n / sum(n)) #> # A tibble: 4 × 4 #>   vs       am            n percent #>   <fct>    <fct>     <int>   <dbl> #> 1 V-shaped automatic    12   0.375 #> 2 V-shaped manual        6   0.188 #> 3 straight automatic     7   0.219 #> 4 straight manual        7   0.219 mtcars2 |> count(vs, am) |> mutate(percent = n / sum(n), .by=am) #> # A tibble: 4 × 4 #>   vs       am            n percent #>   <fct>    <fct>     <int>   <dbl> #> 1 V-shaped automatic    12   0.632 #> 2 V-shaped manual        6   0.462 #> 3 straight automatic     7   0.368 #> 4 straight manual        7   0.538 xtabs(~vs + am, data=mtcars2) #>           am #> vs         automatic manual #>   V-shaped        12      6 #>   straight         7      7 xtabs(~vs + am, data=mtcars2) |> addmargins() #>           am #> vs         automatic manual Sum #>   V-shaped        12      6  18 #>   straight         7      7  14 #>   Sum             19     13  32"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"summarizing-continuous-variables","dir":"Articles","previous_headings":"Summarizing data","what":"Summarizing continuous variables","title":"About Data","text":"get summary statistics continuous variable, use summarize. Within summarize, use newname = [operation] perform operation assign result variable. separately value categorical variable, use .parameter. Note . front .; used make conflicts desired name less likely. See list useful summary functions .","code":"mtcars2 |> summarize(mean_mpg=mean(mpg), sd_mpg=sd(mpg)) #> # A tibble: 1 × 2 #>   mean_mpg sd_mpg #>      <dbl>  <dbl> #> 1     20.1   6.03 mtcars2 |> summarize(mean_mpg=mean(mpg), sd_mpg=sd(mpg), .by=am) #> # A tibble: 2 × 3 #>   am        mean_mpg sd_mpg #>   <fct>        <dbl>  <dbl> #> 1 manual        24.4   6.17 #> 2 automatic     17.1   3.83"},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"selecting-rows-or-columns","dir":"Articles","previous_headings":"Working with data","what":"Selecting rows or columns","title":"About Data","text":"Select model mpg columns: mtcars2 |> select(model, mpg) Select model mpg columns: mtcars2 |> select(-model, -mpg) Select rows manual transmissions: mtcars2 |> filter(==\"manual\") Select rows mpg > 25: mtcars2 |> filter(mpg > 25) See “Comparison” options","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"sorting","dir":"Articles","previous_headings":"Working with data","what":"Sorting","title":"About Data","text":"Use arrange sort Sort increasing mpg: mtcars2 |> arrange(mpg) Sort decreasing mpg: mtcars2 |> arrange(desc(mpg))","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"creating-new-variables","dir":"Articles","previous_headings":"Working with data","what":"Creating new variables","title":"About Data","text":"use mutate function add variable. mutate function creates new variables (possibly overwriting old ones). Within mutate use newname = [operation] perform operation assign result variable Best practice variables use letters, numbers, underscore (_), start letter. data set fuel economy miles per gallon (mpg); suppose instead want use UK standard liters/100 kilometers. Summary select(mtcars2, mpg, Lp10…: 32 rows, 2 columns Variable type: numeric addition arithmetic, number useful function creating new variables, seen .","code":"mtcars2 <- mtcars2 |>    mutate(Lp100km = 3.78541 / 1.60934 * 100 / mpg) mtcars2 |> select(mpg, Lp100km) |> skim()"},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"for-summarizing","dir":"Articles","previous_headings":"Useful functions","what":"For summarizing","title":"About Data","text":"Useful summary functions include: mean: mean sd: standard deviation var: variance median: median quantile: quantile (percentile); use probs parameter specify . example, quantile(x, probs=0.25) gets 25th percentile variable x. min: minimum value max: maximum value IQR: interquartile range n(): get number observations (including grouped using .) R careful missing values compute values missing; good thing forces specifically handle . want remove missing values computing statistics, set parameter na.rm = TRUE functions.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"for-comparing","dir":"Articles","previous_headings":"Useful functions","what":"For comparing","title":"About Data","text":"less /greater : <, <=, >, >=, equal ==, equal != (note double equals test equality) example, variable v <- c(\"\", \"b\", \"c\"), operation v %% c(\"\", \"b\") returns vector c(TRUE, TRUE, FALSE). Boolean operators: |, &, ! test value missing, use .na; using ==NA work. also vectorized; try .na(c(1,2,NA,4))","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"for-creating-new-variables","dir":"Articles","previous_headings":"Useful functions","what":"For creating new variables","title":"About Data","text":"arithmetic functions (+, -, *, /) log functions; natural log default, base 10 base 2 also can used: log, log10, log2 binary condition: if_else several possible conditions: case_when break numeric variable categories: cut","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/data.html","id":"for-factors","dir":"Articles","previous_headings":"Useful functions","what":"For factors","title":"About Data","text":"as_factor: creates factor fct_recode: recodes levels different values fct_relevel: reorders factor levels hand fct_infreq, fct_reorder: reorders factor levels either frequency sorting along another variable droplevels: removes levels zero values","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/graphics.html","id":"combining-plots","dir":"Articles","previous_headings":"","what":"Combining plots","title":"About Graphics","text":"patchwork package allows one combine together several plots ggplot using mathematical operators + (side side) / (). control, see package documentation. ’ll use functionality document display several examples side side.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/graphics.html","id":"scatterplots","dir":"Articles","previous_headings":"","what":"Scatterplots","title":"About Graphics","text":"numeric variables mapped x y, using geom_point give scatterplot; mapping categorical variable color color points variable. One can plot log scale adding scale_x_log10() scale_y_log10().  One can also facet categorical variable; use optional labeller parameter include variable name label.  One can also add smooth plot using stat_smooth. default, allowed bend data includes 95% confidence region. use linear fit, use method=\"lm\", exclude confidence region, use se=FALSE. two smooths, one type, added plot.","code":"plot1 <- ggplot(mtcars2) + aes(x=wt, y=mpg) + geom_point() plot2 <- ggplot(mtcars2) + aes(x=wt, y=mpg, color=gear) + geom_point() plot3 <- plot1 + scale_x_log10() + scale_y_log10() plot1 + plot2 + plot3 ggplot(mtcars2) + aes(x=wt, y=mpg) + geom_point() +   facet_wrap(~gear, labeller = label_both) ggplot(mtcars2) + aes(x=wt, y=mpg) + geom_point() +   stat_smooth(method=\"lm\") +   stat_smooth(se=FALSE)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/graphics.html","id":"bar-plots","dir":"Articles","previous_headings":"","what":"Bar plots","title":"About Graphics","text":"Bar plots show count level categorical variable; y variable needed count computed. Use geom_bar single bar level desired variable, use fill aesthetic color portion bar another variable, use geom_bars put bars side side. Use scale_y_continuous breaks limits parameters change tick locations lower/upper limits. plots can also faceted desired.","code":"plot1 <- ggplot(mtcars2) + aes(x=gear) + geom_bar() plot2 <- ggplot(mtcars2) + aes(x=gear, fill=cyl) + geom_bar() plot3 <- ggplot(mtcars2) + aes(x=gear, fill=cyl) + geom_bars() +   scale_y_continuous(breaks=c(0,5,10,15), limits = c(0, 15))  plot1 + plot2 + plot3"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/graphics.html","id":"histograms-and-density-plots","dir":"Articles","previous_headings":"","what":"Histograms and Density Plots","title":"About Graphics","text":"plots also need x mapping; y computed appropriately. Use geom_histogram make histogram; use parameters binwidth boundary control bins. Use geom_density make density plot; use color aesthetic separately another variable. plots can also faceted desired.","code":"plot1 <- ggplot(mtcars2) + aes(wt) + geom_histogram(binwidth=0.25, boundary=0) plot2 <- ggplot(mtcars2) + aes(wt) + geom_density() plot3 <- ggplot(mtcars2) + aes(wt, color=cyl) + geom_density()  plot1 + plot2 + plot3"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/graphics.html","id":"boxplots","dir":"Articles","previous_headings":"","what":"Boxplots","title":"About Graphics","text":"make boxplot, use geom_boxplot(); usually continuous y categorical x. However, one can flip x y plot horizontally, one wants boxplot just single continuous variable, say var, use x=var, y=0 plot horizontally, add hide_y_axis(). Boxplots can hide information, ’s nice add points top boxplot. , first turn outliers using geom_boxplot(outlier.shape = NA) add swarmed points geom_beeswarm; use spacing parameter control swarm; using parameters pch=21 fill=\"white\" also help make swarm apparent can facetted put log scale, described .","code":"p1 <- ggplot(mtcars2) + aes(x=wt) +    geom_boxplot() +   hide_y_axis() plot2 <- ggplot(mtcars2) + aes(x=wt, y=0) +    geom_boxplot(outlier.shape = NA) +    geom_beeswarm(spacing=3, pch=21, fill=\"white\") +   hide_y_axis() plot1 / plot2 plot1 <- ggplot(mtcars2) + aes(x=cyl, y=wt) +    geom_boxplot() plot2 <- ggplot(mtcars2) + aes(x=cyl, y=wt) +    geom_boxplot(outlier.shape = NA) +   geom_beeswarm(spacing=2, pch=21, fill=\"white\") plot1 + plot2"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/graphics.html","id":"logistic-regression-plots","dir":"Articles","previous_headings":"","what":"Logistic Regression plots","title":"About Graphics","text":"logistic regression, response variable (y) binary, explanatory variable (x) numeric, use geom_beeswarm points don’t overlap, specify orientation=\"y\" swarm right direction. Additionally, use scale_y_binary put response 0-1 proportion scale, optionally add smooth using geom_smooth_logistic. reasons don’t understand, also need aesthetic group=1 smooth work properly. can map variable color aesthetic color points smooth another variable; , set group variable color.","code":"ggplot(mtcars2) + aes(x=wt, y=vs, group=1) +    geom_beeswarm(orientation=\"y\", spacing=2) +   scale_y_binary() +   geom_smooth_logistic()"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/graphics.html","id":"estimates-with-error-bars","dir":"Articles","previous_headings":"","what":"Estimates with error bars","title":"About Graphics","text":"Sometimes one wishes show summary information plot. ’ll calculate mean weight, standard error, number cylinders. show value bar, use geom_col; similar geom_bar except specifying height bar instead R compute count. show error bars, use geom_errorbar map values aesthetics ymin ymax. can computed within plotting function, . width parameter controls width bars (left right). Bars like somewhat frowned upon many fields number reasons may discuss. (especially true error bar just goes height bar; note go ). generally preferred use points error bars, can nice add points , one can see spread data well. ’ll use geom_point mean, scatterplot (though changing parameter size make stand ), geom_beeswarm data points. However, need use syntax variant, want error bar mean point use variables wt_mse, want beeswarm use data mtcars2. Additionally, variable y aesthetic differs two data sets. accomplish , specify aesthetics apply main aes, use additional aes functions within appropriate geom’s. also specify wt_mse data set, , overrule geom_beeswarm specifying new data set .","code":"wt_mse <- mtcars2 |> summarize(m=mean(wt), se=sd(wt)/sqrt(n()), .by=cyl) plot1 <- ggplot(wt_mse) + aes(cyl, m, ymin=m-se, ymax=m+se) +    geom_col() +    geom_errorbar(width=0.5) plot2 <- ggplot(wt_mse) + aes(x=cyl) +    geom_errorbar(aes(ymin=m-se, ymax=m+se), width=0.3) +   geom_point(aes(y=m), size=2) +   geom_beeswarm(aes(y=wt), data=mtcars2, pch=21, fill=\"white\") plot1 + plot2"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/graphics.html","id":"labels","dir":"Articles","previous_headings":"","what":"Labels","title":"About Graphics","text":"change labels, use labs function, specify label particular aesthetic want label differently. Additionally, one can add title subtitle.","code":"ggplot(mtcars2) + aes(x=gear, fill=cyl) +    geom_bar() +    labs(x=\"Number of gears\",        y=\"Count\",        fill=\"Num. Cylinders\",        title=\"Count of car models, by gears and cylinders\")"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/graphics.html","id":"resizing-plots-in-quarto","dir":"Articles","previous_headings":"","what":"Resizing plots in Quarto","title":"About Graphics","text":"resize plot Quarto output, use fig-width fig-height options top chunk. default size usually 6 6. One usually use trial error determine best height width. also easiest way change size text plot; plot made larger, text stays size, smaller relative rest plot.","code":"#| fig-width: 5 #| fig-height: 4"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/graphics.html","id":"saving-plots","dir":"Articles","previous_headings":"","what":"Saving plots","title":"About Graphics","text":"save plot separate file, first assign plot variable name use ggsave, specifying filename, optionally width height. Filetype options include pdf, tiff, png; tiff png, dpi parameter may helpful control resolution, tiff, compression=\"rle\" help file size. reading data, using recommended.","code":"myplot <- ggplot(mtcars2) + aes(x=wt, y=mpg) + geom_point() ggsave(myplot, filename=here(\"myplot.pdf\"), width=6, height=6)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/means.html","id":"one-sample-t-test","dir":"Articles","previous_headings":"","what":"One Sample t-test","title":"Inference for Means","text":"","code":"one_t_inference(wt ~ 1, data = mtcars2)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/means.html","id":"separately-by-another-categorical-variable","dir":"Articles","previous_headings":"One Sample t-test","what":"Separately by another categorical variable","title":"Inference for Means","text":"","code":"one_t_inference(wt ~ am, data = mtcars2)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/means.html","id":"two-sample-t-test","dir":"Articles","previous_headings":"","what":"Two Sample t-test","title":"Inference for Means","text":"","code":"two_t_inference(wt ~ am, data = mtcars2)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/means.html","id":"together-in-one-table","dir":"Articles","previous_headings":"Two Sample t-test","what":"together in one table","title":"Inference for Means","text":"","code":"combine_tests(   one_t_inference(wt ~ am, data = mtcars2),   two_t_inference(wt ~ am, data = mtcars2))"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/means.html","id":"pairwise-t-tests","dir":"Articles","previous_headings":"","what":"Pairwise t-tests","title":"Inference for Means","text":"","code":"combine_tests(   one_t_inference(wt ~ cyl, data = mtcars2),   pairwise_t_inference(wt ~ cyl, data = mtcars2))"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/means.html","id":"paired-t-test","dir":"Articles","previous_headings":"","what":"Paired t-test","title":"Inference for Means","text":"","code":"combine_tests(   one_t_inference(score1 + score2 ~ 1, data = passfail),   paired_t_inference(score2 - score1 ~ 1, data = passfail))"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/means.html","id":"log-transformations","dir":"Articles","previous_headings":"","what":"Log transformations","title":"Inference for Means","text":"default, responses using log(...) back-transformed. keep result log scale, use backtransform = FALSE.","code":"combine_tests(   one_t_inference(log(wt) ~ am, data = mtcars2, backtransform = FALSE),   two_t_inference(log(wt) ~ am, data = mtcars2, backtransform = FALSE),   one_t_inference(log(wt) ~ am, data = mtcars2),   two_t_inference(log(wt) ~ am, data = mtcars2)) combine_tests(   one_t_inference(log(score1) + log(score2) ~ 1, data = passfail),   paired_t_inference(log(score2) - log(score1) ~ 1, data = passfail))"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/models.html","id":"inference-about-a-correlation","dir":"Articles","previous_headings":"","what":"Inference about a correlation","title":"Inference about Models","text":"","code":"correlation_inference(mpg ~ wt + hp, data = mtcars2)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/models.html","id":"model-creation","dir":"Articles","previous_headings":"","what":"Model Creation","title":"Inference about Models","text":"code works linear logistic models; also special handling models log-transformed response Start building models usual way; three models. categorical continuous explanatory variable, interaction. linear model linear model log-transformed response logistic model","code":"m1 <- lm(mpg ~ wt * cyl, data = mtcars2) m1_log <- lm(log(mpg) ~ wt * cyl, data = mtcars2) m2 <- glm(am ~ mpg * cyl, data = mtcars2, family=binomial)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/models.html","id":"model-diagnostics","dir":"Articles","previous_headings":"","what":"Model Diagnostics","title":"Inference about Models","text":"","code":"diag_plots(m1)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/models.html","id":"anova-analysis-of-deviance","dir":"Articles","previous_headings":"","what":"ANOVA / Analysis of Deviance","title":"Inference about Models","text":"","code":"model_anova(m1) model_anova(m1_log) model_anova(m2)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/models.html","id":"model-summary-values","dir":"Articles","previous_headings":"","what":"Model summary values","title":"Inference about Models","text":"","code":"model_glance(m1) model_glance(m2)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/models.html","id":"model-coefficients","dir":"Articles","previous_headings":"","what":"Model coefficients","title":"Inference about Models","text":"","code":"combine_tests(   model_coefs(m1),   model_coefs(m1_log),   model_coefs(m2))"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/models.html","id":"model-means","dir":"Articles","previous_headings":"","what":"Model means","title":"Inference about Models","text":"log response logistic models, model means confidence intervals automatically backtransformed. , original scale log scale log responses, probability scale log-odds scale logistic models. see results log logistic scale, use backtransform = FALSE.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/models.html","id":"linear-model","dir":"Articles","previous_headings":"Model means","what":"Linear Model","title":"Inference about Models","text":"","code":"model_means(m1, ~1) model_means(m1, ~cyl) pairwise_model_means(m1, ~cyl) model_means(m1, ~cyl | wt, at=list(wt=c(2,3,4))) pairwise_model_means(m1, ~cyl | wt, at=list(wt=c(2,3,4)))"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/models.html","id":"linear-model-with-log-response","dir":"Articles","previous_headings":"Model means","what":"Linear Model, with log response","title":"Inference about Models","text":"","code":"model_means(m1_log, ~cyl) pairwise_model_means(m1_log, ~cyl) pairwise_model_means(m1_log, ~cyl, backtransform = FALSE) model_means(m1_log, ~cyl, backtransform = FALSE)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/models.html","id":"logistic-model","dir":"Articles","previous_headings":"Model means","what":"Logistic Model","title":"Inference about Models","text":"","code":"model_means(m2, ~cyl) pairwise_model_means(m2, ~cyl) model_means(m2, ~cyl, backtransform=FALSE) pairwise_model_means(m2, ~cyl, backtransform=FALSE)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/models.html","id":"model-slopes","dir":"Articles","previous_headings":"","what":"Model slopes","title":"Inference about Models","text":"continuous explanatory variables, slopes can obtained compared similar way. log-response logistic models, back-transformation done.","code":"model_slopes(m1, wt~1) model_slopes(m1, wt~cyl) pairwise_model_slopes(m1, wt~cyl) #> Warning in as_atest.data.frame(x, ...): Internal warning: variable type unclear #> for: t.ratio model_slopes(m1_log, wt~cyl) model_slopes(m2, mpg~cyl)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/options.html","id":"formatting-umncvmstats-results","dir":"Articles","previous_headings":"","what":"Formatting umncvmstats Results","title":"Additional Options","text":"output statistical tests package stored special object (atest) knows print nice way. converting gt object gt package. can use gt function first conversion using as_gt. use gt functions ’ll need load gt library umncvmstats. following code simply converts gt object, though change default output haven’t added functions yet.","code":"a <- pairwise_t_inference(mpg ~ cyl, data=mtcars2) a |> as_gt()"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/options.html","id":"compacting-results","dir":"Articles","previous_headings":"Formatting umncvmstats Results","what":"Compacting Results","title":"Additional Options","text":"tab_compact function makes table results smaller; default uses font.size = 13 padding = 1. comparison, font.size = 11 padding = 3.","code":"a |> as_gt() |> tab_compact() a |> as_gt() |> tab_compact(font.size = 11, padding = 3)"},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/options.html","id":"by-significant-digits-or-decimals","dir":"Articles","previous_headings":"Rounding umncvmstats Results","what":"By significant digits or decimals","title":"Additional Options","text":"’s trickier think get R output reasonable number digits; one reason wrote package. formatted output statistical inference functions package makes guess reasonable , , cases. modify number digits output, use set_digits function. can either specify number significant digits number decimal places. default, digits estimate, SE, confidence bounds set rows. set_digits function used directly results object, gt formatting. code sets number significant digits 2 (estimate, SE, confidence bounds), code sets number decimal places 2. Specific values can specified using column names row numbers. can also set number decimals based significant digits given column columns; example, created, decimals set based number significant digits needed SE columns, (margin error) calculated conf.high conf.low. determines many decimals needed display SE 2 significant digits, uses estimate, SE, confidence bounds. following current default setting.","code":"a |> set_digits(digits=2) a |> set_digits(decimals=2) a |> set_digits(decimals=5, columns=\"difference\", rows=1:2) a |> set_digits(digits=2, by=c(\"SE\", \"ME\"))"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/options.html","id":"rounding-p-values","dir":"Articles","previous_headings":"Rounding umncvmstats Results","what":"Rounding p-values","title":"Additional Options","text":"Rounding p-values currently handled within gt mechanism, using fmt_pvalue function, formats p-values (anything named p.value p.adjust), digits significant digits, max.digits decimals. default 2 significant digits, 4 maximum digits. ’s output look like 3 significant digits 5 maximum digits.","code":"a |> as_gt() |> fmt_pvalue(digits=3, max.digits=5)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/options.html","id":"output-as-data-set","dir":"Articles","previous_headings":"","what":"Output as data set","title":"Additional Options","text":"get underlying output data set, use as_tibble. ’ll need loaded tibble library, loads part tidyverse. several options handle footnotes. useful processing graphics based output desired. ’ll notice column names different formatted output; formatted output tries simplify table make clearer read, instead returns underlying pieces handle needed specific case.","code":"a |> as_tibble() #> # A tibble: 3 × 13 #>   .y    .x    .x_contrast difference    SE    df conf.low conf.high  null #>   <chr> <chr> <chr>            <dbl> <dbl> <dbl>    <dbl>     <dbl> <dbl> #> 1 mpg   cyl   4 - 6             6.92 1.47   13.0     2.89     10.9      0 #> 2 mpg   cyl   4 - 8            11.6  1.52   15.0     7.46     15.7      0 #> 3 mpg   cyl   6 - 8             4.64 0.877  18.5     2.33      6.95     0 #> # ℹ 4 more variables: t.value <dbl>, p.value <dbl>, p.adjust <dbl>, about <chr>"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/options.html","id":"multiple-tests","dir":"Articles","previous_headings":"","what":"Multiple tests","title":"Additional Options","text":"one two-sample tests (, ’re fitting model), can use + specify test done several variables. can also use | split data set groups running tests.","code":"one_t_inference(wt + mpg ~ am + vs, data = mtcars2) two_t_inference(wt + mpg ~ am + vs, data = mtcars2) one_t_inference(wt + mpg ~ am | cyl, data = mtcars2) two_t_inference(wt + mpg ~ am | cyl, data = mtcars2)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/options.html","id":"combining-output","dir":"Articles","previous_headings":"","what":"Combining output","title":"Additional Options","text":"can use combine_tests combine output several tests together. package best output meaningfully, ’s combine meaningful things together.","code":"combine_tests(   one_t_inference(wt ~ am|vs, data = mtcars2),   two_t_inference(wt ~ am, data = mtcars2),   correlation_inference(mpg ~ wt + hp, data=mtcars2),   one_proportion_inference(vs ~ am|cyl, data=mtcars2)) |>   as_gt() |> tab_compact()"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/proportions.html","id":"inference-for-one-proportion","dir":"Articles","previous_headings":"","what":"Inference for One Proportion","title":"Inference for Proportions","text":"automatically choose Wilson’s CI “exact” CI. null hypothesis tested default.","code":"one_proportion_inference(vs ~ 1, data = mtcars2)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/proportions.html","id":"separately-by-another-categorical-variable","dir":"Articles","previous_headings":"Inference for One Proportion","what":"Separately by another categorical variable","title":"Inference for Proportions","text":"","code":"one_proportion_inference(vs ~ am, data = mtcars2)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/proportions.html","id":"inference-for-two-proportions","dir":"Articles","previous_headings":"","what":"Inference for Two Proportions","title":"Inference for Proportions","text":"automatically choose asymptotic test (without continuity correction) Fisher’s test.","code":"two_proportion_inference(vs ~ am, data = mtcars2)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/proportions.html","id":"together-in-one-table","dir":"Articles","previous_headings":"Inference for Two Proportions","what":"together in one table","title":"Inference for Proportions","text":"","code":"combine_tests(   one_proportion_inference(vs ~ am, data = mtcars2),   two_proportion_inference(vs ~ am, data = mtcars2))"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/proportions.html","id":"pairwise-proportion-tests","dir":"Articles","previous_headings":"","what":"Pairwise Proportion Tests","title":"Inference for Proportions","text":"","code":"combine_tests(   one_proportion_inference(vs ~ cyl, data = mtcars2),   pairwise_proportion_inference(vs ~ cyl, data = mtcars2))"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/proportions.html","id":"paired-proportion-test-mcnemars","dir":"Articles","previous_headings":"","what":"Paired Proportion Test (McNemar’s)","title":"Inference for Proportions","text":"","code":"combine_tests(   one_proportion_inference(pass1 + pass2 ~ 1, data = passfail),   one_proportion_inference(pass2 ~ pass1, data = passfail, all_success = TRUE),   paired_proportion_inference(pass2 - pass1 ~ 1, data = passfail))"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/proportions.html","id":"independence-test","dir":"Articles","previous_headings":"","what":"Independence Test","title":"Inference for Proportions","text":"automatically choose chi-squared test Fisher’s test.","code":"combine_tests(   one_proportion_inference(cyl ~ vs, data = mtcars2, all_success = TRUE),   independence_test(cyl ~ vs, data = mtcars2))"},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"installing-r-and-rstudio","dir":"Articles","previous_headings":"Installation and Setup","what":"Installing R and Rstudio","title":"Getting Started","text":"Download install R Rstudio. See links : https://posit.co/download/rstudio-desktop/ need ; “R” software underneath actually work; “Rstudio” interface makes work much easier. Fall 2024, R version 4.4.1 Rstudio version 2024.04.2 Build 764. can check version R checking Console pane start Rstudio, version Rstudio using Help > Rstudio. can also use following commands console.","code":"R.version.string RStudio.Version()$version"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"installing-packages","dir":"Articles","previous_headings":"Installation and Setup","what":"Installing packages","title":"Getting Started","text":"R many add-packages allow one specialized tasks make every-day tasks easier. ’ll using set packages called tidyverse, package specifically course called umncvmstats (needs devtools package installation.) install , start Rstudio run three lines console, one time. (console left pane; ’ll fuller introduction panes later.) lines download install package, packages depends , can take (minutes, hours). devtools installation may give warning Rtools; can ignored. need run lines , need run every time open R. However, may ask reinstall umncvmstats package semester; ’s possible class uses , ’ll find things need updated.","code":"install.packages(\"tidyverse\") install.packages(\"devtools\") devtools::install_github(\"AaronRendahl/umncvmstats\")"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"for-updated-installations-only","dir":"Articles","previous_headings":"Installation and Setup > Installing packages","what":"For updated installations only:","title":"Getting Started","text":"previous version R recently updated recent version, also make sure packages updated, using code. just installed R first time, unnecessary.","code":"update.packages(ask = FALSE, checkBuilt = TRUE)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"setting-preferences","dir":"Articles","previous_headings":"Installation and Setup","what":"Setting preferences","title":"Getting Started","text":"three important preferences set. Tools menu, select Global Options. General (left side), Basic (top): Unselect “Restore .RData workspace startup”. “Save workspace .RData exit” select “Never”. preference important prevents R remembering anything session session. Although sounds like good idea, can make work difficult reproduce.  “R Markdown” (left side), Unselect “Show output inline R Markdown documents”. suggest start way, ’s ’ll demonstrate, ’re welcome try inline output see prefer .","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"file-management","dir":"Articles","previous_headings":"Installation and Setup","what":"File Management","title":"Getting Started","text":"able work data files R, need able use file manager (Finder Mac) navigate files folders, move rename files, find open files ’ve downloaded. Let’s set folder use R code assignments class, practice downloading test files moving folder. Close Rstudio ; tasks web browser file manager, Rstudio. Decide want files class use file manager create new folder . Computers sometimes issues spaces filenames, recommend using letters, numbers, underscores name folder. example, VMED5915_Fall2024. Within folder, make subfolder called “data” store data files ’ll use. Download following files move data subfolder. systems default saving “Downloads” folder; find file move folder just created. may also able use “Save File ” save directly. http://www.stat.umn.edu/~rend0020/5915_data/books1.csv http://www.stat.umn.edu/~rend0020/5915_data/books1.xlsx also may need download files Google Drive. can little different, let’s try . Go Google Drive folder download books.csv books.xlsx files, move class data folder. Link Google Drive data folder now four test files data folder class; ’ll try opening later.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"creating-a-project","dir":"Articles","previous_headings":"Installation and Setup","what":"Creating a Project","title":"Getting Started","text":"Now folder class, need tell Rstudio folder one want use everything. Rstudio, folder called “project”. Using project really helps reproducibility, helps Rstudio find files needs work properly (though can trouble subfolders, want use subfolders, ask package). Open Rstudio go File > New Project. select “Existing Directory” choose folder created class (main one, data subfolder). create new file ending Rproj folder created open Rstudio project folder. Check make sure ’s desired project looking upper right corner Rstudio, say name folder . lower right pane also see list files folder, include Rproj file Rstudio just created, along data folder created earlier. R installation good go; ’ll confirm can open data files properly next section.","code":""},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"starting-r","dir":"Articles","previous_headings":"Working in R","what":"Starting R","title":"Getting Started","text":"’s important every time start Rstudio work things class open project file. ’s (least) two ways ; can either use file manager find folder created open Rproj file; assuming installation worked properly, open R within project. Alternatively, can use File > Open Project File > Recent Projects menus. can also found upper right current project name shown. Try closing Rstudio reopening project class. Check upper right corner files pane make sure ’s open properly. recommend one methods opening project, especially one multiple projects. However, want always open specific project, use preference Tools > Global Options > General > Basic set “Restore recently opened project setup” option.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"introduction-to-the-panes","dir":"Articles","previous_headings":"Working in R","what":"Introduction to the Panes","title":"Getting Started","text":"first open Rstudio, ’ll see three panes, several tabs. left pane console; ’ll type commands view text-based output. expect us use tab pane. upper right pane “Environment”; shows list objects R memory current time. expect us use tab pane. lower right pane “Files” current project; also plot-based output appear (“Plots” tab), formatted output appear (“Viewer” tab), help appear (“Help” tab). can also see (install) packages “Packages” tab. files opened data sets viewed, console pane drop lower left, fourth pane appear upper right, tabs files data sets.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"getting-help","dir":"Articles","previous_headings":"Working in R","what":"Getting Help","title":"Getting Started","text":"’ve planned semester properly, functions need mentioned documentation umncvmstats package, , files ’re reading right now. help, especially function arguments, can look help file specific function using ?. works great – happen remember name function. example, get help read_csv function (’ll see soon), try typing console: reference, Rstudio “cheat sheets” built ; go Help > Cheat Sheets. ones Rstudio IDE, Data Transformation, Data Visualization likely helpful.","code":"?read_csv"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"r-basics","dir":"Articles","previous_headings":"Working in R","what":"R Basics","title":"Getting Started","text":"Let’s start R basic mathematics; try typing console. ’ll note [1] beginning line; R, everything vector (, one elements long), telling ’s first element vector. Let’s use : operator create vector can see happens elements span one line output. ’ll often want save result operation. Let’s save result computation variable . Note doesn’t output anything result saved, see result input variable . Think <- arrow pointing left. everything R vector, makes arithmetic one element easy; adds b together element-wise. ’ll also see c operator used create vectors, think ‘c’ “combine.” time, ’ll use R functions; example, mean function. let’s get mean vector just made. pass values function putting parentheses function name; can multiple arguments (separated comma), can named (using single equals sign=). example, missing values (NA) data, mean undefined, unless specifically told R remove missing values first setting na.rm argument TRUE. (Best practice always write TRUE FALSE caps.) ’ll also use functions using “pipe” operator, |>. Think triangle sends thing left function right, first argument. Additional arguments can included . Note still need parenthesis, whether additional arguments. makes easy chain results functions together new functions.","code":"1 + 1 #> [1] 2 1:50 #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 a <- 2 + 2 a #> [1] 4 a <- 1:5 b <- 10:14 a + b #> [1] 11 13 15 17 19 a <- c(1, 3, 5, 7, 10) a #> [1]  1  3  5  7 10 mean(a) #> [1] 5.2 a2 <- c(1, 2, 3, 4, NA) mean(a2) #> [1] NA mean(a2, na.rm=TRUE) #> [1] 2.5 a |> mean() #> [1] 5.2 a2 |> mean(na.rm=TRUE) #> [1] 2.5"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"getting-unstuck","dir":"Articles","previous_headings":"Working in R","what":"Getting unstuck","title":"Getting Started","text":"One can easily get “stuck” R giving half expected pair delimiters, example, opening \" (. happens, ’ll see + console instead >, indicating R expecting input. happens, use [Control-C] cancel current input line.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"loading-packages","dir":"Articles","previous_headings":"Working in R","what":"Loading packages","title":"Getting Started","text":"mentioned , R many add-packages extend basic functionality. ’ve installed packages, still tell R anytime want use one. useful analogy may apps phone; install app, still need start – don’t reinstall everytime want use . use function library load package. lines loads tidyverse umncvmstats libraries. ’ll notice tidyverse library gave message conflicts; sometimes happens add-packages function name gets used twice. can cause really weird errors expect version one package get version another. help , recommend using conflicted package. Let’s load try one functions noted conflict. see won’t actually anything, instead ask want . Usually ’ll choose ahead time want like .","code":"library(tidyverse) library(umncvmstats) library(conflicted) filter() #> Error: #> ! [conflicted] filter found in 2 packages. #> Either pick the one you want with `::`: #> • dplyr::filter #> • stats::filter #> Or declare a preference with `conflicts_prefer()`: #> • `conflicts_prefer(dplyr::filter)` #> • `conflicts_prefer(stats::filter)` conflicts_prefer(dplyr::filter) #> [conflicted] Will prefer dplyr::filter over any #> other package."},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"suggestions-for-this-semester","dir":"Articles","previous_headings":"Working in R","what":"Suggestions for this semester","title":"Getting Started","text":"believe almost packages ’ll need semester; code assignment template. conflicted: handles conflicts packages tidyverse: set packages data manipulation graphics, includes ggplot2 umncvmstats: standardizes syntax output statistical functions, also adds various useful functionality : helps find files within project, especially subfolders used readxl: adds functionality reading Excel files patchwork: allows multiple graphics combined together (eg, side side) gt: formatted output tables Best practice load packages ’re going use particular script Quarto file top.","code":"library(conflicted) library(tidyverse) library(umncvmstats) library(here) library(readxl) library(patchwork) library(gt) conflicts_prefer(dplyr::filter, dplyr::lag, dplyr::select, umncvmstats::as_gt)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"opening-data-files","dir":"Articles","previous_headings":"Working in R","what":"Opening data files","title":"Getting Started","text":"First, specifying file locations, always use paths relative main project, never absolute paths file system. ensures code reproducible move project around share files others. allow files found within project, use function. file mydata.csv main project folder, ’s just (\"mydata.csv\"). ’s subfolder, say, data, ’s (\"data\", \"mydata.csv\"). ’ll now confirm R can open files downloaded earlier. Run following lines console. Running first two lines, load excel files, result output; running second two lines, open csv files, output number rows columns column specification. upper right pane, click environment tab, click names d1 d4 turn; open tab top left pane display spreadsheet. (sure click name open tab; clicking arrow instead expand list variables, can also useful.) four variables, volume, area, weight, cover.  Note can’t edit data directly Rstudio using view; viewing data set. might seem odd, ’ll see, ’ll interact R using typed commands ensure reproducibility. Assuming worked, can delete test files. Use file manager , click circular arrow top right lower pane (Files tab) update listing files Rstudio. ’s also rudimentary file operations available pane, robust file manager. R/Rstudio setup now ready go!","code":"d1 <- readxl::read_excel(here(\"data\", \"books.xlsx\")) d2 <- readxl::read_excel(here(\"data\", \"books1.xlsx\")) d3 <- readr::read_csv(here(\"data\", \"books.csv\")) d4 <- readr::read_csv(here(\"data\", \"books1.csv\"))"},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"using-scripts","dir":"Articles","previous_headings":"Using scripts and Quarto files","what":"Using scripts","title":"Getting Started","text":"R commands just plain text, can save commands plain text file, usually extension .R. menus try File > New File > R Script create new R script. ’ll open new untitled file; try typing 1 + 1 , save filename like test.R. won’t run commands file type ; instead need send console. Instead copy/paste (work), ’s keyboard shortcut, whatever command ’re sent console [Control-Enter] (also [Command-Enter] Mac). allows keep commands ’ve used analysis, essential reproducibility. However, doesn’t keep output; , need use Quarto.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"about-quarto","dir":"Articles","previous_headings":"Using scripts and Quarto files","what":"About Quarto","title":"Getting Started","text":"Quarto file plain text file, combines R code header information file explanatory text may want write . “render” Quarto file, runs R code combines together explanatory text single output file. default, html file, though Word PDF also possible, though Word, formatting consistent PDF, back-end tools needed (ie, LaTeX). explanatory text written “Markdown”, plain text format allows use make bold, italic, lists, headers, etc. Rstudio visual editor, though, don’t need know code.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"creating-a-new-assignment","dir":"Articles","previous_headings":"Using scripts and Quarto files","what":"Creating a new assignment","title":"Getting Started","text":"can get default Quarto template using File > New File > Quarto Document, purpose class, ’ve developed alternate template appropriate defaults, already code load libraries ’ll use show version R ’re using. following code makes new file file name yourname_HW01.qmd, adds title “Homework 1” top, adds “Name” author. change appropriate.","code":"new_assignment(\"yourname_HW01\", \"Homework 1\", \"Your Name\")"},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"rendering-a-quarto-file","dir":"Articles","previous_headings":"Using scripts and Quarto files > Using Quarto","what":"Rendering a Quarto file","title":"Getting Started","text":"new file, “render” clicking Render button top window. Depending settings, either open Viewer pane new browser window. can use arrow icon Viewer pane instead open browser, ’s prefer.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"visual-mode","dir":"Articles","previous_headings":"Using scripts and Quarto files > Using Quarto","what":"Visual mode","title":"Getting Started","text":"Try switching “Source” “Visual” mode top window; allows either type markdown directly use visual editor.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"adding-an-r-chunk","dir":"Articles","previous_headings":"Using scripts and Quarto files > Using Quarto","what":"Adding an R chunk","title":"Getting Started","text":"couple ways add another R chunk visual mode; can use Code > Insert Chunk, can type /, brings menu options.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"chunk-options","dir":"Articles","previous_headings":"Using scripts and Quarto files > Using Quarto","what":"Chunk options","title":"Getting Started","text":"number chunk options can set control output, among things; common exclude messages warnings final rendered file. set lines starting #| start chunk. example, assignment template, line turns messages loading packages. #| message: false useful options warning: false hide warnings, echo: false show output, code. See Quarto reference .","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"trying-out-r-code","dir":"Articles","previous_headings":"Using scripts and Quarto files > Using Quarto","what":"Trying out R code","title":"Getting Started","text":"can send R code R chunk console exactly way R script, using [Control-Enter].","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/starting.html","id":"best-practices-for-reproducibility","dir":"Articles","previous_headings":"Using scripts and Quarto files > Using Quarto","what":"Best practices for reproducibility","title":"Getting Started","text":"quarto file rendered, chunks run order starting top, fresh R session. means code depends code needs proper order. One helpful best practice load packages ’re going use single chunk top document, assignment template.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Summary","text":"Various basic R ideas covered Getting Started page, including : Open class “Project” Use panes Rstudio Use assignment operator <- save result operation Use functions, , able call function one (possibly named) parameters Use pipe |> send value function Use c function “combine” values together Get unstuck using [Control-C]) cancel current input line Load packages using library function Create scripts Quarto files send commands console Use chunk options Quarto control output (eg, #| message: false) Render Quarto files open result browser","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"about-data","dir":"Articles","previous_headings":"","what":"About Data","title":"Summary","text":"Data page details read data, compute descriptive summary statistics, working data sets, various functions summarizing, comparing, creating new variables, working factors. Best practices creating data set spreadsheet Reading data set using read_csv read_excel, optional parameters na, skip, sheet skim check read properly mutate, as_factor, optionally fct_recode create factor variables descriptive_statistics get summary descriptive statistics variables; use parameter split another variable first. count mutate (optionally .parameter) get counts percents categorical data summarize (optionally .parameter) get summary statistics continuous data select select column filter select row (see comparing functions) arrange (desc) sort mutate make new variables count mutate, get counts percents summarize continuous variables, mean, sd, var, median, quantile (probs parameter), min, max, IQR, n() Use na.rm = TRUE remove missing values first <, <=, >, >=, ==, != %% |, &, ! .na arithmetic functions (+, -, *, /) log, log10, log2 if_else, case_when, cut as_factor fct_recode fct_relevel fct_infreq, fct_reorder droplevels","code":""},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"controlling-output","dir":"Articles","previous_headings":"About Graphics","what":"Controlling output","title":"Summary","text":"Combining plots using + / Using #| fig-width #| fig-height control figure size Quarto","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"basics-of-ggplot2","dir":"Articles","previous_headings":"About Graphics","what":"Basics of ggplot2","title":"Summary","text":"ggplot2 library, uses “grammar graphics” specify aspects plot. following pseudo-code plots data data set data_set, maps variable x_var x aesthetic, y_var y aesthetic (needed), adds geometric object (XXX); points, lines, bars. can optionally facet plot, change scales, change labels, .","code":"ggplot(data_set,         mapping=aes(x=x_var, y=y_var, fill=fill_var, color=color_var)) +   geom_XXX() +   facet_XXX() +   scale_XXX() +   labs(...)"},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"scatterplots","dir":"Articles","previous_headings":"About Graphics","what":"Scatterplots","title":"Summary","text":"geom_point() add points Color points another variable mapping color aesthetic Use stat_smooth(), optional parameters method=\"lm\" se=FALSE add fitted line Use scale_x_log10() scale_y_log10 put x y axes log scale","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"bar-plots","dir":"Articles","previous_headings":"About Graphics","what":"Bar plots","title":"Summary","text":"need x mapping; y count x variable geom_bar() one bar per value geom_bars() multiple bars per value, variable color specified mapping variable fill aesthetic","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"histograms-and-density-plots","dir":"Articles","previous_headings":"About Graphics","what":"Histograms and Density plots","title":"Summary","text":"also need x mapping; y computed appropriately Use geom_histogram make histogram; use parameters binwidth boundary control bins Use geom_density make density plot; use color aesthetic separately another variable","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"box-plots","dir":"Articles","previous_headings":"About Graphics","what":"Box plots","title":"Summary","text":"Flip x y plot horizontally single continuous variable, say var, use x=var, y=0 plot horizontally, add hide_y_axis() first turn outliers using geom_boxplot(outlier.shape = NA) add swarmed points geom_beeswarm; use spacing parameter control swarm; using parameters pch=21 fill=\"white\" also help make swarm apparent Use scale_x_log10() scale_y_log10 put x y axes log scale","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"logistic-regression-plots","dir":"Articles","previous_headings":"About Graphics","what":"Logistic Regression plots","title":"Summary","text":"Use geom_beeswarm continuous x variable binary y variable Use scale_y_binary make y-axis 0-1 scale Use geom_smooth_logistic add logistic smooth","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"facetting","dir":"Articles","previous_headings":"About Graphics","what":"Facetting","title":"Summary","text":"facet_wrap(~byvar) facetting one variable facet_wrap(~byvar, labeller = label_both) add variable names facet_grid(var1 ~ var2) facetting two variables","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"labelling","dir":"Articles","previous_headings":"About Graphics","what":"Labelling","title":"Summary","text":"Change label aesthetic (add title) using labs. labs(x = \"x variable\", y = \"y variable\", title = \"Plot title\")","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"statistical-inference","dir":"Articles","previous_headings":"","what":"Statistical Inference","title":"Summary","text":"functions use “formula” notation, like : function(response ~ explanatory, data=dataset). one_proportion_inference two_proportion_inference pairwise_proportion_inference paired_proportion_inference independence_test one_t_inference two_t_inference pairwise_t_inference paired_t_inference functions can handle log-transformed responses, backtransform parameter specify whether output log original scale. functions models (starting model_) apply linear logistic models. also backtransform parameter specify whether output log original scale (linear models log-transformed response) logistic probability scale (logistic models). linear models: lm(y ~ x, data = dataset) logistic models: glm(y ~ x, data = dataset, family=binomial) multiple predictors, use ~ x1 + x2 additive model x1 * x2 include interactions correlation_inference model_anova model_glance model_coefs model_means, pairwise_model_means means slopes, use | formula specify groupings specify specific values obtain means slopes .","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/articles/summary.html","id":"additional-options","dir":"Articles","previous_headings":"","what":"Additional Options","title":"Summary","text":"Several additional options controlling output available. as_gt use gt formatting options tab_compact change font size spacing set_digits control rounding (except p-values) fmt_pvalue control rounding p-values as_tibble get underlying result data set Using + | run multiple tests time combine_tests combine results together single table","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aaron Rendahl. Author, maintainer.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rendahl (2024). umncvmstats: Standardized Functions One Two Sample Statistical Tests. R package version 1.0.0, https://aaronrendahl.github.io/umncvmstats/.","code":"@Manual{,   title = {umncvmstats: Standardized Functions for One and Two Sample Statistical Tests},   author = {Aaron Rendahl},   year = {2024},   note = {R package version 1.0.0},   url = {https://aaronrendahl.github.io/umncvmstats/}, }"},{"path":"https://aaronrendahl.github.io/umncvmstats/index.html","id":"umncvmstats","dir":"","previous_headings":"","what":"Standardized Functions for One and Two Sample Statistical Tests","title":"Standardized Functions for One and Two Sample Statistical Tests","text":"umncvmstats package standardizes function usage output basic statistical functions allow new R users focus learning principles statistics statistical communication rather details R. installation instructions basic overview using R, see Getting Started article. See additional articles details.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/as_gt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a gt table object — as_gt.atest","title":"Create a gt table object — as_gt.atest","text":"Convert object gt table.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/as_gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a gt table object — as_gt.atest","text":"","code":"# S3 method for class 'atest' as_gt(   x,   footnote_col = \"footnote\",   rowname_col = c(),   groupname_col = c(),   simplify = TRUE,   row_group_as_column = TRUE,   ... )  as_gt(x, ...)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/as_gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a gt table object — as_gt.atest","text":"x object convert. footnote_col column add footnotes . rowname_col column use row names, desired. groupname_col column use groups, desired. simplify logical variable, whether simplify table first. See Details. row_group_as_column logical variable, whether ... additional parameters, passed gt.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/as_gt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a gt table object — as_gt.atest","text":"Behind scenes, atest object number columns specifying variables used original formula; include names variables (.y ~ .x | .g) also categorical variables, values variables (.y_value, .x_value, .g_value) contrasts (.y_contrast, .x_contrast) two-sample, pairwise, paired comparisons. also .terms variable right hand side atest model. simplify = TRUE (default), converted readable columns, particular, values contrasts combined variable names, new variables response, variable, group, model used instead variables described .","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/combine_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple tests together — combine_tests","title":"Combine multiple tests together — combine_tests","text":"Combine multiple tests together","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/combine_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple tests together — combine_tests","text":"","code":"combine_tests(...)  combine_tests_list(x)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/combine_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple tests together — combine_tests","text":"... various tests combined. x list tests combined.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/correlation_inference.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation Tests and Confidence Intervals — correlation_inference","title":"Correlation Tests and Confidence Intervals — correlation_inference","text":"Correlation Tests Confidence Intervals","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/correlation_inference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation Tests and Confidence Intervals — correlation_inference","text":"","code":"correlation_inference(   formula,   data,   alternative = c(\"two.sided\", \"less\", \"greater\"),   method = c(\"pearson\", \"kendall\", \"spearman\"),   conf.level = 0.95,   ... )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/correlation_inference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation Tests and Confidence Intervals — correlation_inference","text":"formula formula form y~x data data frame containing values formula alternative options method options conf.level desired confidence level confidence intervals. ... Additional parameters","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/descriptive_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute descriptive statistics for a data set — descriptive_statistics","title":"Compute descriptive statistics for a data set — descriptive_statistics","text":"Use gtsummary::tbl_summary summarize variables data set. categorical variables, reports count/total percent; continuous variables, reports mean, standard deviation, median, range.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/descriptive_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute descriptive statistics for a data set — descriptive_statistics","text":"","code":"descriptive_statistics(data, ..., digits = 2, compact = TRUE)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/descriptive_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute descriptive statistics for a data set — descriptive_statistics","text":"data data set summarize. ... additional parameters, sent tbl_summary. digits desired number significant figures, numeric variables. compact logical specifying whether compact resulting gt table.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/descriptive_statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute descriptive statistics for a data set — descriptive_statistics","text":"","code":"mtcars2 |> dplyr::select(-model) |> descriptive_statistics()     Characteristic       N = 32     mpg     Mean ± SD 20.09 ± 6.03    Median (Min, Max) 19.20 (10.40, 33.90)cyl, n/N (%)     4 11/32 (34%)    6 7/32 (22%)    8 14/32 (44%)disp     Mean ± SD 230.72 ± 123.94    Median (Min, Max) 196.30 (71.10, 472.00)hp     Mean ± SD 146.69 ± 68.56    Median (Min, Max) 123.00 (52.00, 335.00)drat     Mean ± SD 3.60 ± 0.53    Median (Min, Max) 3.70 (2.76, 4.93)wt     Mean ± SD 3.22 ± 0.98    Median (Min, Max) 3.33 (1.51, 5.42)qsec     Mean ± SD 17.85 ± 1.79    Median (Min, Max) 17.71 (14.50, 22.90)vs, n/N (%)     V-shaped 18/32 (56%)    straight 14/32 (44%)am, n/N (%)     automatic 19/32 (59%)    manual 13/32 (41%)gear, n/N (%)     3 15/32 (47%)    4 12/32 (38%)    5 5/32 (16%)carb, n/N (%)     1 7/32 (22%)    2 10/32 (31%)    3 3/32 (9.4%)    4 10/32 (31%)    6 1/32 (3.1%)    8 1/32 (3.1%)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/diag_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Display standard diagnostic plots for a model — diag_plots","title":"Display standard diagnostic plots for a model — diag_plots","text":"Display standard diagnostic plots model.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/diag_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display standard diagnostic plots for a model — diag_plots","text":"","code":"diag_plots(model)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/diag_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display standard diagnostic plots for a model — diag_plots","text":"model model display diagnostic plots .","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/diag_plots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display standard diagnostic plots for a model — diag_plots","text":"four standard diagnostic plots created plot.lm shown, using ggplot graphics techniques. plots include: Residual vs Fitted Normal Q-Q Scale-Location Residuals vs Leverage","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/format_pvalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Format p-values — format_pvalue","title":"Format p-values — format_pvalue","text":"Format p-values","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/format_pvalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format p-values — format_pvalue","text":"","code":"format_pvalue(   p,   digits = 2,   max.digits = 4,   justify = TRUE,   addp = FALSE,   na = \"\" )  fmt_pvalue(data, columns = any_of(c(\"p.value\", \"p.adjust\")), ...)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/format_pvalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format p-values — format_pvalue","text":"p vector p-value(s) format. digits desired number significant figures. max.digits maximum number decimal places. justify logical specifying whether align decimal point. addp logical specifying whether p = p < added output. na value replace missing values (defaults blank). data data set columns format. columns desired columns format. ... additional parameters, sent format_pvalue","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/format_signif.html","id":null,"dir":"Reference","previous_headings":"","what":"Format to significant digits — format_signif","title":"Format to significant digits — format_signif","text":"Format significant digits","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/format_signif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format to significant digits — format_signif","text":"","code":"format_signif(x, digits = 3, max_small = 6, max_big = 6, keep_big = digits)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/format_signif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format to significant digits — format_signif","text":"x numbers format digits many significant digits show max_small maximum number decimals show using scientific notation max_big maxiumum number places show (large numbers) using scientific notation keep_big number significant digits show using scientific notation large numbers","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/geom_bars.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar charts — geom_bars","title":"Bar charts — geom_bars","text":"Make bar chart ggplot, bars within group next default (, \"dodged\") instead stacked. Based ggplot::geom_bar.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/geom_bars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar charts — geom_bars","text":"","code":"geom_bars(   mapping = NULL,   data = NULL,   stat = \"count\",   position = position_dodge2(preserve = \"single\"),   ...,   just = 0.5,   width = NULL,   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/geom_bars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar charts — geom_bars","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat Override default connection geom_bar() stat_count(). information overriding connections, see stat geom arguments work. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. just Adjustment column placement. Set 0.5 default, meaning columns centered axis breaks. Set 0 1 place columns left/right axis breaks. Note argument may unintended behavior used alternative positions, e.g. position_dodge(). width Bar width. default, set 90% resolution() data. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behavior default plot specification, e.g. borders().","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/geom_beeswarm.html","id":null,"dir":"Reference","previous_headings":"","what":"Points, jittered to reduce overplotting using the beeswarm package — geom_beeswarm","title":"Points, jittered to reduce overplotting using the beeswarm package — geom_beeswarm","text":"beeswarm geom convenient means offset points within categories reduce overplotting. Based ggbeeswarm::geom_beeswarm, default compact swarm random priority. Uses beeswarm package.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/geom_beeswarm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Points, jittered to reduce overplotting using the beeswarm package — geom_beeswarm","text":"","code":"geom_beeswarm(   mapping = NULL,   data = NULL,   stat = \"identity\",   ...,   method = \"compactswarm\",   spacing = 1,   side = 0L,   priority = \"random\",   fast = TRUE,   dodge.width = NULL,   corral = \"none\",   corral.width = 0.9,   orientation = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  position_beeswarm(   method = \"compactswarm\",   spacing = 1,   side = 0L,   priority = \"random\",   fast = TRUE,   orientation = NULL,   dodge.width = 0,   corral = \"none\",   corral.width = 0.2 )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/geom_beeswarm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Points, jittered to reduce overplotting using the beeswarm package — geom_beeswarm","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data.frame containing plotting data columns x y. Usually obtained data processed ggplot2. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. method Method arranging points (see Details ) spacing Scaling adjusting point spacing (see beeswarm::swarmx()). Values 1 (default) 3 tend work best. side Direction perform jittering: 0: directions; 1: right upwards; -1: left downwards. priority Method used perform point layout (see Details ) fast Use compiled version swarm algorithm? option ignored methods expect \"swarm\" \"compactswarm\". dodge.width Amount points different aesthetic groups dodged. requires one aesthetics factor. corral string. Method used adjust points placed wide horizontally, default \"none\". See details . corral.width numeric. Width corral, default 0.9. orientation orientation (.e., axis group ) inferred data. can overridden setting orientation either \"x\" \"y\". na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/geom_beeswarm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Points, jittered to reduce overplotting using the beeswarm package — geom_beeswarm","text":"method: specifies algorithm used avoid overlapping points. default \"swarm\" method places points increasing order. point overlap existing point, shifted sideways (along group axis) minimal amount sufficient avoid overlap. \"swarm\" method places points predetermined order, \"compactswarm\" method uses greedy strategy determine point placed next. often leads tightly-packed layout. strategy simple: iteration, point can placed close possible non-data axis chosen placed. two equally good points, priority used break ties. 3 methods first discretise values along data axis, order create efficient packing. \"square\" method places points square grid, whereas \"hex\" uses hexagonal grid. \"centre\"/\"center\" uses square grid produce symmetric swarm. number break points discretisation determined combination available plotting area spacing argument. priority: controls order points placed, generally noticeable effect plot appearance. \"ascending\" gives 'traditional' beeswarm plot. \"descending\" opposite. \"density\" prioritizes points higher local density. \"random\" places points random order. \"none\" places points order provided. corral: default, swarms different groups prevented overlapping, .e. \"corral = \"none\". Thus, datasets large unevenly distributed may produce ugly overlapping beeswarms. control runaway points one can use following methods. \"gutter\" collects runaway points along boundary groups. \"wrap\" implement periodic boundaries. \"random\" places runaway points randomly region. \"omit\" omits runaway points.","code":""},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/geom_smooth_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a smooth from a logistic regression — geom_smooth_logistic","title":"Add a smooth from a logistic regression — geom_smooth_logistic","text":"Add smooth ggplot, using logistic model.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/geom_smooth_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a smooth from a logistic regression — geom_smooth_logistic","text":"","code":"geom_smooth_logistic(mapping = NULL, data = NULL, se = TRUE, ...)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/geom_smooth_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a smooth from a logistic regression — geom_smooth_logistic","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. See ggplot::geom_smooth additional details. se logical specifying confidence interval shown around smooth. ... arguments passed geom_smooth.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/geom_smooth_logistic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a smooth from a logistic regression — geom_smooth_logistic","text":"Uses geom_smooth method glm binomial family, formula factor(y) ~ x.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/guess_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random scatterplot for guessing correlations — guess_cor","title":"Create a random scatterplot for guessing correlations — guess_cor","text":"Create random scatterplot guessing correlations","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/guess_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random scatterplot for guessing correlations — guess_cor","text":"","code":"guess_cor(   seed = NA,   nonp = FALSE,   skew = nonp,   rank = FALSE,   answer = c(\"interactive\", \"show\", \"hide\"),   return.data = FALSE )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/guess_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random scatterplot for guessing correlations — guess_cor","text":"seed random seed used creating data. nonp non-parametric correlations shown? skew extra skew randomly added? rank data set converted ranks plotting computing correlations? answer option control interactivity; options \"interactive\", \"show\", \"hide\". return.data normally plot returned; TRUE, data returned instead.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/hide_y_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Hide the y-axis of a ggplot — hide_y_axis","title":"Hide the y-axis of a ggplot — hide_y_axis","text":"Hide y-axis ggplot","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/hide_y_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hide the y-axis of a ggplot — hide_y_axis","text":"","code":"hide_y_axis()"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/independence_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Independence Tests for Count Data — independence_test.formula","title":"Independence Tests for Count Data — independence_test.formula","text":"Perform independence test two categorical variables, using either chi-squared method Fisher's exact method.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/independence_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Independence Tests for Count Data — independence_test.formula","text":"","code":"# S3 method for class 'formula' independence_test(   formula,   data,   method = c(\"default\", \"chisq\", \"exact\"),   correct = FALSE,   ... )  # Default S3 method independence_test(   x,   method = c(\"default\", \"chisq\", \"exact\"),   correct = FALSE,   ... )  independence_test(x, ...)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/independence_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Independence Tests for Count Data — independence_test.formula","text":"formula formula form y ~ x, y x factor variables. factors, automatically converted. perform test within subgroups, use y ~ x | g. data data frame containing values formula. method character string specifying method use. One \"default\", \"chisq\", \"exact\". correct logical indicating whether Yates' continuity correction applied; used chi-squared test . ... additional parameters, currently unused. x instead formula, provide matrix counts directly.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/independence_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Independence Tests for Count Data — independence_test.formula","text":"default, chi-squared method continuity correction used unless minimum expected count null less 5, case Fisher's exact test used.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_anova.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model Anova table — model_anova","title":"Get model Anova table — model_anova","text":"Retrieve Anova (analysis variance) table linear model, analysis deviance table generalized linear model, computed car::Anova.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model Anova table — model_anova","text":"","code":"model_anova(model, ...)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model Anova table — model_anova","text":"model linear model generalized linear model. ... additional parameters, passed car::Anova.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_coefs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model coefficients — model_coefs","title":"Get model coefficients — model_coefs","text":"Retrieve coefficients corresponding confidence intervals p-values, computed broom::tidy.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_coefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model coefficients — model_coefs","text":"","code":"model_coefs(model, ...)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_coefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model coefficients — model_coefs","text":"model linear model generalized linear model. ... additional parameters, passed broom::tidy.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_glance.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model summary information — model_glance","title":"Get model summary information — model_glance","text":"Retrieve statistics R-squared, AIC, , computed broom::glance.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_glance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model summary information — model_glance","text":"","code":"model_glance(model, ...)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_glance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model summary information — model_glance","text":"model linear model generalized linear model. ... additional parameters, passed broom::glance.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model means and slopes (trends) — model_means","title":"Get model means and slopes (trends) — model_means","text":"Retrieve estimated marginal means slopes (trends) computed emmeans::emmeans emmeans::emtrends, tests pairwise differences, computed emmeans::pairs.emmGrid.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model means and slopes (trends) — model_means","text":"","code":"model_means(   model,   formula,   cld = TRUE,   backtransform = TRUE,   type = if (isTRUE(backtransform)) \"response\" else \"linear\",   ... )  pairwise_model_means(   model,   formula,   backtransform = TRUE,   type = if (isTRUE(backtransform)) \"response\" else \"linear\",   ... )  model_slopes(model, formula, ..., cld = TRUE)  pairwise_model_slopes(model, formula, ...)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model means and slopes (trends) — model_means","text":"model linear model generalized linear model. formula desired means slopes; see Details. cld logical variable specifying compact letter display used pairwise comparisons groups. backtransform linear model response variable form log(y), model logistic model , backtransform resulting estimate confidence interval bounds, report either geometric means original scale ratios (log-transformed responses) proportions odds ratios (logistic models). type specify method backtransformation emmeans. used, backtransform ignored. ... additional parameters, passed emmeans emtrends. See Details.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/model_means.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get model means and slopes (trends) — model_means","text":"means, specify desired combinations explanatory variables using formula notation. example, get means levels variable x, use ~ x. get means combinations x1 x2, use ~ x1 + x2. slopes, specify desired slope left side formula. example, get slopes variable x level variable g, use x ~ g. get overall slope, use x ~ 1. Additionally, one can specify groupings using | within formula. example, get means combinations x1 x2 grouped value x2, use ~ x1 | x2. especially useful getting pairwise tests means trends within subgroups. default, estimated marginal means trends estimated computing average mean trend across values categorical explanatory variables equally, mean value numeric explanatory variables. One useful additional parameters can passed emmeans , allows one specify specific values continuous variables compute means /trends . example, one continuous variable x model, one compute means x=10 x=20 using = list(x = c(10, 20).","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/mtcars2.html","id":null,"dir":"Reference","previous_headings":"","what":"Motor Trend Car Road Tests — mtcars2","title":"Motor Trend Car Road Tests — mtcars2","text":"version Motor Trend car road tests data datasets package, tibble categorical variables stored factors.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/mtcars2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Motor Trend Car Road Tests — mtcars2","text":"","code":"mtcars2"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/mtcars2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Motor Trend Car Road Tests — mtcars2","text":"tibble 32 rows 12 variables. model Make model car mpg Miles/(US) gallon cyl Number cylinders (factor) disp Displacement (cu..) hp Gross horsepower drat Rear axle ratio wt Weight (1000 lbs) qsec 1/4 mile time vs Engine (V-shaped / straight) Transmission (automatic / manual) gear Number forward gears (factor) carb Number carburetors (factor)","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/mtcars2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Motor Trend Car Road Tests — mtcars2","text":"datasets package; see datasets::mtcars.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/new_assignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a blank new assignment — new_assignment","title":"Create a blank new assignment — new_assignment","text":"Create blank new assignment included quarto template.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/new_assignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a blank new assignment — new_assignment","text":"","code":"new_assignment(   filename,   title,   author,   open = is_interactive() & isAvailable() )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/new_assignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a blank new assignment — new_assignment","text":"filename desired filename new file. title desired title, inserted new file. author desired author, inserted new file. open logical specifying whether open new file editing.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/one_proportion_inference.html","id":null,"dir":"Reference","previous_headings":"","what":"One-sample proportion inference — one_proportion_inference.formula","title":"One-sample proportion inference — one_proportion_inference.formula","text":"Compute proportion \"successes\" sample corresponding confidence interval. Optionally, compute p-value specified null hypothesis.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/one_proportion_inference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-sample proportion inference — one_proportion_inference.formula","text":"","code":"# S3 method for class 'formula' one_proportion_inference(   formula,   data,   success,   all_success = FALSE,   method = c(\"default\", \"wilson\", \"exact\"),   correct = FALSE,   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf.level = 0.95,   null = NULL,   ... )  # Default S3 method one_proportion_inference(   x,   n,   method = c(\"default\", \"wilson\", \"exact\"),   correct = FALSE,   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf.level = 0.95,   null = NULL,   ... )  one_proportion_inference(x, ...)  wilson_test(   x,   n,   null,   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf.level = 0.95,   correct = FALSE )  binomial_test(   x,   n,   null,   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf.level = 0.95 )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/one_proportion_inference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-sample proportion inference — one_proportion_inference.formula","text":"formula formula form ~ y y ~ 1, y factor variable. factor, automatically converted. perform test within subgroups, use y ~ x y ~ 1 | g, even y ~ x | g. data data frame containing values formula. success optional vector specifying level(s) proportions reported. all_success TRUE, proportions levels reported. method character string specifying method use. One \"default\", \"wilson\", \"exact\". correct logical indicating whether Yates' continuity correction applied; used Wilson test . alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". conf.level confidence level returned confidence interval. Must single number 0 1. null number specifying null proportion testing null hypothesis; specified, hypothesis test performed. ... additional arguments, currently unused. x number successes. n number trials.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/one_proportion_inference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One-sample proportion inference — one_proportion_inference.formula","text":"tibble class atest containing columns follows: x count successes n sample size proportion proportion successes conf.low lower confidence bound conf.high upper confidence bound null specified null value (specified) p.value p-value test (null specified)","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/one_proportion_inference.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"One-sample proportion inference — one_proportion_inference.formula","text":"default confidence interval proportion reported, hypothesis test can also performed specifying desired null value. Two methods currently supposed, either Wilson's method (without continuity correction) Clopper-Pearson \"exact\" method. method specified, default method Wilson's method without continuity correction, however, \"exact\" method chosen sample size less 10, observed proportion less 0.10, minimum expected count null less 5 (null hypothesis specified). Wilson's method uses stats::prop.test exact method uses stats::binom.test.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/one_t_inference.html","id":null,"dir":"Reference","previous_headings":"","what":"One-sample t-test — one_t_inference","title":"One-sample t-test — one_t_inference","text":"Compute mean sample corresponding confidence interval, using Student's t distribution. Optionally, compute p-value specified null hypothesis.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/one_t_inference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-sample t-test — one_t_inference","text":"","code":"one_t_inference(   formula,   data,   alternative = c(\"two.sided\", \"less\", \"greater\"),   null,   conf.level = 0.95,   backtransform = TRUE )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/one_t_inference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-sample t-test — one_t_inference","text":"formula formula form ~ y y ~ 1, y numeric variable. perform test within subgroups, use y ~ x y ~ 1 | g, even y ~ x | g, x g factor variables. data data frame containing values formula. alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". null number specifying null proportion testing null hypothesis; specified, hypothesis test performed. conf.level confidence level returned confidence interval. Must single number 0 1. backtransform response variable form log(...), backtransform resulting estimate confidence interval bounds.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/paired_proportion_inference.html","id":null,"dir":"Reference","previous_headings":"","what":"Paired proportion test (McNemar's) — paired_proportion_inference","title":"Paired proportion test (McNemar's) — paired_proportion_inference","text":"Perform McNemar's test paired proportions, computing proportion switch failure success switch either direction performing one-sample proportion test null 0.5.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/paired_proportion_inference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paired proportion test (McNemar's) — paired_proportion_inference","text":"","code":"paired_proportion_inference(   formula,   data,   success,   method = c(\"default\", \"wilson\", \"exact\"),   alternative = c(\"two.sided\", \"less\", \"greater\"),   correct = FALSE,   conf.level = NA )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/paired_proportion_inference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paired proportion test (McNemar's) — paired_proportion_inference","text":"formula formula form y2 - y1 ~ 1 ~ y2 -y1, y1 y2 numeric variables. perform test within subgroups, use y2 - y1 ~ x y2 - y1 ~ 1 | g, even y2- y1 ~ x | g, x g factor variables. data data frame containing values formula. success level response variable consider success method character string specifying method use. One \"default\", \"wilson\", \"exact\". alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". correct logical indicating whether Yates' continuity correction applied; used Wilson test . conf.level desired, confidence level returned confidence interval. Must single number 0 1.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/paired_t_inference.html","id":null,"dir":"Reference","previous_headings":"","what":"Paired t-test — paired_t_inference","title":"Paired t-test — paired_t_inference","text":"Compute mean difference paired samples, corresponding confidence interval, p-value null hypothesis equal means (, difference zero).","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/paired_t_inference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paired t-test — paired_t_inference","text":"","code":"paired_t_inference(   formula,   data,   alternative = c(\"two.sided\", \"less\", \"greater\"),   null = 0,   conf.level = 0.95,   backtransform = TRUE )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/paired_t_inference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paired t-test — paired_t_inference","text":"formula formula form y2 - y1 ~ 1 ~ y2 -y1, y1 y2 numeric variables. perform test within subgroups, use y2 - y1 ~ x y2 - y1 ~ 1 | g, even y2- y1 ~ x | g, x g factor variables. data data frame containing values formula. alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". null number specifying null proportion testing null hypothesis; specified, hypothesis test performed. conf.level confidence level returned confidence interval. Must single number 0 1. backtransform response variable form log(y2) - log(y1), backtransform resulting estimate confidence interval bounds, report ratio geometric means rather difference log scale.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/passfail.html","id":null,"dir":"Reference","previous_headings":"","what":"Scores on pre/post test (generated data) — passfail","title":"Scores on pre/post test (generated data) — passfail","text":"Generated pre/post data demonstrate paired tests. score 80 considered passing.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/passfail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scores on pre/post test (generated data) — passfail","text":"","code":"passfail"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/passfail.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Scores on pre/post test (generated data) — passfail","text":"tibble 50 rows 4 columns. score1 pre-test score score2 post-test score pass1 pre-test pass/fail status pass2 post-test pass/fail status","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/sample_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random data set for regression — sample_data","title":"Create a random data set for regression — sample_data","text":"Create random data set regression display standard diagnostic plots.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/sample_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random data set for regression — sample_data","text":"","code":"sample_data(seed, verbose = FALSE)  sample_lm(seed = sample(10000 - 1, 1))"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/sample_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random data set for regression — sample_data","text":"seed sample data use. verbose logical specifying messages sample data displayed.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/scale_y_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a binary scale — scale_y_binary","title":"Make a binary scale — scale_y_binary","text":"Make binary scale","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/scale_y_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a binary scale — scale_y_binary","text":"","code":"scale_y_binary(...)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/scale_y_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a binary scale — scale_y_binary","text":"... Additional parameters, passed scale_y_continuous","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/set_digits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set desired digits for values in an atest — set_digits","title":"Set desired digits for values in an atest — set_digits","text":"Set desired digits values atest","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/set_digits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set desired digits for values in an atest — set_digits","text":"","code":"set_digits(   x,   digits = 2,   decimals,   rows = seq_len(nrow(x)),   columns = c(\"_estimate_\", \"SE\", \"conf.low\", \"conf.high\"),   by = NA,   by_row = TRUE,   overwrite = TRUE )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/set_digits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set desired digits for values in an atest — set_digits","text":"x atest object digits desired number significant digits. decimals Alternatively, number decimal places show. rows rows apply columns columns apply ; default, columns corresponding estimate, SE, confidence intervals. column determines significant digits, default SE. by_row Whether compute significant digits row (default), use number digits rows least many. overwrite Whether overwrite existing digits specification.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/skim.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize (skim) the variables in a data set — skim","title":"Summarize (skim) the variables in a data set — skim","text":"skim(), skimr package, provides broad overview data frame. summarizes type variable (character, factor, numeric, etc.) way appropriate . See skimr::skim.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/skim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize (skim) the variables in a data set — skim","text":"","code":"skim(data, ..., .data_name = NULL)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/skim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize (skim) the variables in a data set — skim","text":"data data frame skim. ... Columns select skimming. .data_name name use data. Defaults data","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/tab_compact.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact a gt table — tab_compact","title":"Compact a gt table — tab_compact","text":"Compact gt table. Uses tab_options set table.font.size various padding options (see Details).","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/tab_compact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact a gt table — tab_compact","text":"","code":"tab_compact(x, font.size = 13, padding = 1)  tab_padding(x, padding)"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/tab_compact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact a gt table — tab_compact","text":"x table compact. font.size desired font size. padding spacing rows, pixels.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/tab_compact.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compact a gt table — tab_compact","text":"Padding options set data_row.padding, summary_row.padding, grand_summary_row.padding, footnotes.padding, source_notes.padding, row_group.padding; set value.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/two_proportion_inference.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-sample proportion inference — two_proportion_inference.formula","title":"Two-sample proportion inference — two_proportion_inference.formula","text":"Compute absolute difference proportion two samples, corresponding confidence interval, p-value null hypothesis equal proportions (, difference zero).","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/two_proportion_inference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-sample proportion inference — two_proportion_inference.formula","text":"","code":"# S3 method for class 'formula' two_proportion_inference(   formula,   data,   success,   method = c(\"default\", \"chisq\", \"exact\"),   correct = TRUE,   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf.level = 0.95,   ... )  # Default S3 method two_proportion_inference(   x,   n,   method = c(\"default\", \"chisq\", \"exact\"),   correct = TRUE,   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf.level = 0.95,   conf.adjust = 1,   ... )  two_proportion_inference(x, ...)  pairwise_proportion_inference(   formula,   data,   adjust = c(\"bonferroni\", \"holm\", \"none\"),   reverse = FALSE,   ... )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/two_proportion_inference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-sample proportion inference — two_proportion_inference.formula","text":"formula formula form y ~ x, y x factor variables. factors, automatically converted. perform test within subgroups, use y ~ x | g. data data frame containing values formula. success optional value specifying level proportions reported. method character string specifying method use. One \"default\", \"chisq\", \"exact\". correct logical indicating whether continuity correction applied; used chi-squared test . alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". conf.level confidence level returned confidence interval. Must single number 0 1. ... arguments passed submethods, appropriate. x vector count successes two groups, 2x2 matrix counts. n vector count total trials two groups. conf.adjust adjust confidence bounds conf.adjust simultaneous intervals using Bonferroni method. Used internally pairwise_proportion_inference; rarely used users. adjust method adjusting p-values multiple comparisons, one \"bonferroni\", \"holm\", \"none\". reverse reverse direction pairwise comparisons.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/two_proportion_inference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-sample proportion inference — two_proportion_inference.formula","text":"tibble class atest containing columns follows: difference difference proportion two groups conf.low lower confidence bound conf.high upper confidence bound chisq.value chi-squared value (chi-squared method used) p.value p-value test","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/two_proportion_inference.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two-sample proportion inference — two_proportion_inference.formula","text":"Two methods currently supported, asymptotic test using chi-squared statistic (either without continuity correction) Fisher's exact test. default, chi-squared method used, continuity correction determined stats::prop.test function, unless minimum expected count null equal proportions less 5, case Fisher's exact test used. Fisher's exact test used, confidence interval difference proportions reported. chi-squared option uses stats::prop.test exact test option uses stats::fisher.test.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/two_t_inference.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-sample t-test — two_t_inference","title":"Two-sample t-test — two_t_inference","text":"Compute difference means two samples, corresponding confidence interval, p-value null hypothesis equal means (, difference zero).","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/two_t_inference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-sample t-test — two_t_inference","text":"","code":"two_t_inference(   formula,   data,   alternative = c(\"two.sided\", \"less\", \"greater\"),   null = 0,   var.equal = FALSE,   conf.level = 0.95,   conf.adjust = 1,   backtransform = TRUE )  pairwise_t_inference(   formula,   data,   adjust = c(\"bonferroni\", \"holm\", \"none\"),   reverse = FALSE,   ... )"},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/two_t_inference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-sample t-test — two_t_inference","text":"formula formula form y ~ x, y numeric variable x factor variable. perform test within subgroups, use y ~ x | g, x g factor variables. data data frame containing values formula. alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". null number specifying null proportion testing null hypothesis; specified, hypothesis test performed. var.equal logical variable indicating whether treat two variances equal. default assume unequal variance. conf.level confidence level returned confidence interval. Must single number 0 1. conf.adjust adjust confidence bounds conf.adjust simultaneous intervals using Bonferroni method. Used internally pairwise_t_inference; rarely used users. backtransform response variable form log(...), backtransform resulting estimate confidence interval bounds, report ratio geometric means rather difference log scale. adjust method adjusting p-values multiple comparisons, one \"bonferroni\", \"holm\", \"none\". reverse reverse direction pairwise comparisons. ... arguments passed submethods, appropriate.","code":""},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/umncvmstats.html","id":null,"dir":"Reference","previous_headings":"","what":"umncvmstats ... — umncvmstats","title":"umncvmstats ... — umncvmstats","text":"package ...","code":""},{"path":[]},{"path":"https://aaronrendahl.github.io/umncvmstats/reference/umncvmstats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"umncvmstats ... — umncvmstats","text":"Aaron Rendahl, rend0020@umn.edu","code":""}]
